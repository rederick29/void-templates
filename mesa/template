# Template file for 'mesa'
# Modified ver of official void mesa template available in void-packages repo
# Only for gnu libc, x86_64 with multilib, and fairly recent AMD GPUs
# Original by q66 <daniel@octaforge.org>
pkgname=mesa
version=22.1.1
revision=1
build_style=meson
configure_args="-Dglvnd=true -Dshared-glapi=enabled -Dgbm=enabled -Degl=enabled
 -Dosmesa=true -Dgles1=enabled -Dgles2=enabled -Dglx=dri -Ddri3=enabled
 -Dlmsensors=enabled -Dplatforms=x11,wayland
 -Dllvm=enabled -Db_lto=false -Dcpp_std=gnu++14"
hostmakedepends="gettext flex llvm pkg-config python3-Mako glslang
 wayland-protocols wayland-devel"
makedepends="elfutils-devel expat-devel libXdamage-devel libXvMC-devel
 libXxf86vm-devel libatomic-devel libdrm-devel libffi-devel libva-devel
 libvdpau-devel libxshmfence-devel ncurses-devel zlib-devel
 wayland-devel wayland-protocols llvm libsensors-devel
 libXrandr-devel libglvnd-devel libzstd-devel libxml2-devel lua53-devel
 libarchive-devel"
depends="libglvnd"
short_desc="Graphics library similar to SGI's OpenGL"
maintainer="Erick Vilcica <erick.vilcica@protonmail.com>"
license="MIT, LGPL-2.1-or-later"
homepage="https://www.mesa3d.org/"
changelog="https://docs.mesa3d.org/relnotes/${version}.html"
distfiles="https://mesa.freedesktop.org/archive/mesa-${version}.tar.xz"
checksum=46940865ffe794db73ac2bc7ab7ff2570042a0b61a8ac43ca1688863e2bc0ef1

configure_args+=" -Ddraw-use-llvm=false"

# Set subpackages manually to set proper rdeps in 32bit pkgs.
subpackages="libglapi libgbm libgbm-devel libOSMesa"

# Replace old mesa pkgs, superseded by libglvnd.
replaces="libGL>=10_1<19.2.5_2 libEGL>=10_1<19.2.5_2 libGLES>=10_1<19.2.5_2"

# swrast always present
_gallium_drivers=" -Dgallium-drivers=swrast"
_vulkan_drivers=" -Dvulkan-drivers="

# pre-gallium drivers are mostly for old ati + i915/965
_dri_drivers=" -Ddri-drivers="

_have_amd=yes
_have_hwdec=yes
_have_nine=yes
_have_opencl=yes
_have_vulkan=yes
_have_zink=yes

if [ "$_have_amd" ]; then
	# amd cards can use clover
	_have_opencl=yes
	_have_vulkan=yes
	_gallium_drivers+=",r300,r600,radeonsi"
	_vulkan_drivers+=",amd"
	subpackages+=" mesa-vulkan-radeon"
fi

if [ "$_have_nine" ]; then
	configure_args+=" -Dgallium-nine=true"
fi

# enabled currently by amd drivers
if [ "$_have_opencl" ]; then
	hostmakedepends+=" clang"
	makedepends+=" clang libclc"
	subpackages+=" mesa-opencl"
	configure_args+=" -Dgallium-opencl=icd"
fi

if [ "$_have_hwdec" ]; then
	configure_args+=" -Dgallium-vdpau=enabled -Dgallium-va=enabled"
	subpackages+=" mesa-vaapi mesa-vdpau"
else
	configure_args+=" -Dgallium-vdpau=disabled -Dgallium-va=disabled"
fi

# empty values introduced by leading comma are not allowed; the whole enumeration can be empty
# _gallium_drivers is not affected by this problem
_vulkan_drivers=${_vulkan_drivers/=,/=}
_dri_drivers=${_dri_drivers/=,/=}

configure_args+=" ${_vulkan_drivers} ${_dri_drivers}"

if [ "$_have_vulkan" ]; then
	_have_zink=yes
	configure_args+=" -Dvulkan-layers=device-select,overlay"
	subpackages+=" mesa-vulkan-overlay-layer"
fi

if [ "$_have_zink" ]; then
	_gallium_drivers+=",zink"
	makedepends+=" vulkan-loader"
fi

configure_args+=" ${_gallium_drivers}"

# must be the last one for proper order
subpackages+=" mesa-dri MesaLib-devel"

post_install() {
	vlicense docs/license.rst

	# ensure that each eligible architecture ships its multilib icd files
	# in some cases, multiple counterpart architectures may exist (aarch64)
	# this allows us to not have to ship these files in the current *-32bit packages
	local arch=${XBPS_TARGET_MACHINE%-*}
	local oarchs
	local olibdir="/usr/lib32/"
	if [ "$XBPS_TARGET_WORDSIZE" = "32" ]; then
		olibdir="/usr/lib64/"
	fi
	case "${arch}" in
		x86_64) oarchs="i686";;
		i686) oarchs="x86_64";;
		*) ;; # no counterparts
	esac
	for oarch in $oarchs; do
		for icd in ${DESTDIR}/usr/share/vulkan/icd.d/*_icd.${arch}.json; do
			sed "s#/usr/lib${XBPS_TARGET_WORDSIZE}/#${olibdir}#g" \
				${icd} > ${icd/.${arch}/.${oarch}}
		done
	done
}

libglapi_package() {
	# this dependency is wrong, it was added as a hack to allow updating
	# systems with libglapi-32bit after the switch to glvnd
	# see 927f17347f9c646047c65312c8e8ce1ad88b7832
	# it can be removed when glibc multilib (with *-32bit packages) is removed
	depends="libglvnd"
	short_desc="Free implementation of the GL API - shared library"
	pkg_install() {
		vmove "usr/lib/libglapi.so.*"
	}
}

libgbm_package() {
	short_desc="Mesa Generic buffer management API - runtime"
	pkg_install() {
		vmove "usr/lib/libgbm.so.*"
	}
}

libgbm-devel_package() {
	short_desc="Mesa Generic buffer management API - development files"
	depends="libgbm>=${version}_${revision}"
	pkg_install() {
		vmove usr/include/gbm.h
		vmove usr/lib/libgbm.so
		vmove usr/lib/pkgconfig/gbm.pc
	}
}

libOSMesa_package() {
	short_desc="Mesa Off-Screen interface library"
	pkg_install() {
		vmove "usr/lib/libOSMesa.so.*"
	}
}

MesaLib-devel_package() {
	depends="mesa>=${version}_${revision} libOSMesa>=${version}_${revision}
	 libgbm-devel>=${version}_${revision}"
	if [ "$_have_opencl" ]; then
		depends+=" mesa-opencl>=${version}_${revision}"
	fi
	depends+=" libdrm-devel libglvnd-devel"
	short_desc+=" - development files"
	pkg_install() {
		vmove usr/include
		vmove usr/lib/pkgconfig
		vmove usr/lib/libEGL_mesa.so
		vmove usr/lib/libGLX_mesa.so
		vmove usr/lib/libOSMesa.so
		vmove usr/lib/libglapi.so
		if [ "$_have_opencl" ]; then
			vmove usr/lib/libMesaOpenCL.so
		fi
	}
}

libxatracker_package() {
	short_desc="Mesa XA tracker interface library"
	pkg_install() {
		vmove "usr/lib/libxatracker*.so.*"
	}
}

mesa-opencl_package() {
	short_desc="Mesa implementation of OpenCL (r600+ only)"
	depends="libclc"
	pkg_install() {
		vmove etc/OpenCL
		vmove usr/lib/gallium-pipe
		vmove "usr/lib/libMesaOpenCL.so.*"
	}
}

mesa-dri_package() {
	short_desc="Mesa DRI drivers"
	depends="mesa-${version}_${revision}"
	shlib_provides="libgallium_dri.so" # workaround for mesa-dri-32bit
	pkg_install() {
		vmove usr/lib/dri
	}
}

mesa-vaapi_package() {
	short_desc="Mesa VA-API drivers"
	shlib_provides="libgallium_drv_video.so" # workaround for mesa-vaapi-32bit
	pkg_install() {
		vmove "usr/lib/dri/*_drv_video.so"
	}
}

mesa-vdpau_package() {
	short_desc="Mesa VDPAU drivers"
	pkg_install() {
		vmove "usr/lib/vdpau/libvdpau_*"
	}
}

mesa-vulkan-radeon_package() {
	short_desc="Mesa Radeon Vulkan driver"
	pkg_install() {
		vmove "usr/share/vulkan/icd.d/radeon_icd*.json"
		vmove "usr/lib/libvulkan_radeon.so"
	}
}

mesa-vulkan-overlay-layer_package() {
	short_desc="Vulkan layer to display information about the running application"
	pkg_install() {
		vmove "usr/share/vulkan/explicit_layer.d/VkLayer_*.json"
		vmove "usr/share/vulkan/implicit_layer.d/VkLayer_*.json"
		vmove "usr/bin/mesa-overlay-control.py"
		vmove "usr/lib/libVkLayer_*.so"
	}
}
